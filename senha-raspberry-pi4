#!/bin/bash
# Instala√ß√£o automatizada completa do Painel SGA com JavaFX no Raspberry Pi 4
# wget --inet4-only -O- https://raw.githubusercontent.com/CarloseOldenburg/Senha-Raspberry-PI4/refs/heads/main/senha-raspberry-pi4 | bash

# === VERIFICA√á√ÉO DE ROOT ===
if [ "$(id -u)" -ne 0 ]; then
  echo "Este script deve ser executado como root."
  exit 1
fi

# === VARI√ÅVEIS ===
JDK_URL="https://painel-sga-cdn.s3.us-east-2.amazonaws.com/jdk-23_linux-aarch64_bin.tar.gz"
JAVAFX_URL="https://painel-sga-cdn.s3.us-east-2.amazonaws.com/openjfx-23.0.2_linux-aarch64_bin-sdk.zip"
PAINEL_URL="https://painel-sga-cdn.s3.us-east-2.amazonaws.com/painel-sga.zip"
UI_URL="https://painel-sga-cdn.s3.us-east-2.amazonaws.com/ui.zip"
USER_HOME="/home/pi"
CONFIG_FILE="$USER_HOME/painel.conf"
JAR_FILE="$USER_HOME/painel-sga-1.0-SNAPSHOT.jar"
LOG_FILE="$USER_HOME/painel.log"

# === DESATIVAR WAYLAND E FOR√áAR X11 ===
echo "üöß Desativando Wayland e for√ßando X11..."
mkdir -p /etc/lightdm/lightdm.conf.d
cat <<EOF > /etc/lightdm/lightdm.conf.d/99-x11.conf
[Seat:*]
display-server=x11
WaylandEnable=false
EOF

echo "[Seat:*]\ndisplay-server=x11\nWaylandEnable=false" > /etc/lightdm/lightdm.conf

echo "exec startlxsession" > "$USER_HOME/.xsession"
echo "export XDG_SESSION_TYPE=x11" >> "$USER_HOME/.bashrc"
chown pi:pi "$USER_HOME/.xsession" "$USER_HOME/.bashrc"

# === ATUALIZA√á√ÉO DO SISTEMA ===
echo "üîÑ Atualizando sistema para Bookworm..."
sed -i 's/bullseye/bookworm/g' /etc/apt/sources.list
apt update && apt full-upgrade -y

# === INSTALAR DEPEND√äNCIAS ===
echo "üì• Instalando depend√™ncias gr√°ficas e essenciais..."
apt install -y libgtk-3-dev libgl1-mesa-glx unzip wget lxterminal xserver-xorg lightdm lxde-core

echo "/usr/sbin/lightdm" > /etc/X11/default-display-manager
dpkg-reconfigure -f noninteractive lightdm

# === REINSTALAR COMPONENTES GR√ÅFICOS (PARA GARANTIA) ===
apt install --reinstall -y lxde-core lightdm xserver-xorg-core xserver-xorg

# === INSTALAR JDK E JAVAFX ===
echo "üì¶ Instalando JDK e JavaFX..."
wget -O /tmp/jdk.tar.gz "$JDK_URL"
tar -xzf /tmp/jdk.tar.gz -C /opt
rm /tmp/jdk.tar.gz

wget -O /tmp/javafx.zip "$JAVAFX_URL"
rm -rf "$USER_HOME/javafx-sdk-23.0.2"
unzip -o -q /tmp/javafx.zip -d "$USER_HOME"
chown -R pi:pi "$USER_HOME/javafx-sdk-23.0.2"
rm /tmp/javafx.zip

# === INSTALAR PAINEL E UI ===
echo "üì• Instalando Painel e UI..."
wget -O /tmp/painel-sga.zip "$PAINEL_URL"
unzip -uo -q /tmp/painel-sga.zip -d "$USER_HOME"
rm /tmp/painel-sga.zip

wget -O /tmp/ui.zip "$UI_URL"
unzip -uo -q /tmp/ui.zip -d "$USER_HOME"
rm /tmp/ui.zip

# === CONFIGURAR JAVA PADR√ÉO ===
echo "‚öôÔ∏è Configurando Java..."
update-alternatives --install /usr/bin/java java /opt/jdk-23.0.2/bin/java 1
update-alternatives --install /usr/bin/javac javac /opt/jdk-23.0.2/bin/javac 1

# === CONFIGURAR AUTO INICIALIZA√á√ÉO ===
echo "üöÄ Configurando inicializa√ß√£o autom√°tica..."
AUTOSTART_DIR="$USER_HOME/.config/autostart"
DESKTOP_FILE="$AUTOSTART_DIR/painel-sga.desktop"
mkdir -p "$AUTOSTART_DIR"

cat <<EOF > "$DESKTOP_FILE"
[Desktop Entry]
Type=Application
Name=Painel SGA
Exec=lxterminal -e bash -c 'export DISPLAY=:0; export XDG_SESSION_TYPE=x11; java -Djava.library.path=$USER_HOME/javafx-sdk-23.0.2/lib --module-path $USER_HOME/javafx-sdk-23.0.2/lib --add-modules javafx.controls,javafx.fxml,javafx.web,javafx.swing,javafx.media -jar $JAR_FILE >> $LOG_FILE 2>&1'
Hidden=false
NoDisplay=false
X-GNOME-Autostart-enabled=true
EOF

chmod +x "$DESKTOP_FILE"
chmod +x "$JAR_FILE"

# === CONFIGURA√á√ÉO PAINEL ===
echo "üìã Gerando painel.conf..."
cat <<EOF > "$CONFIG_FILE"
#Novo SGA configuration file
#$(date)
CorSenha=\#f2f2f2
ScreensaverUrl=file\:/home/pi/media/img/SSBack.png
IPServidor=http://IP
Servicos=1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30
Language=pt
MainLayout=1
CorMensagem=\#ffffff
UnidadeId=1
VideoID=1
ScreensaverLayout=3
Vocalizar=true
Som=alert.wav
CorFundo=\#33cc99
CorGuiche=\#ffffff
ScreensaverTimeout=30
EOF

chmod 644 "$CONFIG_FILE"
chown pi:pi "$CONFIG_FILE"

# === VALIDA√á√ÉO ===
echo "üîç Validando instala√ß√£o..."
success=true
[ -f "$JAR_FILE" ] || { echo "‚ùå JAR n√£o encontrado!"; success=false; }
command -v java >/dev/null 2>&1 || { echo "‚ùå Java n√£o dispon√≠vel!"; success=false; }
[ -f "$CONFIG_FILE" ] || { echo "‚ùå painel.conf n√£o criado!"; success=false; }

if $success; then
  echo "‚úÖ Instala√ß√£o conclu√≠da com sucesso!"
else
  echo "‚ö†Ô∏è Houve problemas na instala√ß√£o."
fi

echo "üìç Verifique o log em $LOG_FILE ap√≥s reiniciar."
echo "üìÇ painel.conf em $USER_HOME/"
echo "üñºÔ∏è Imagem de fundo em $USER_HOME/ui/img/"
echo "üîÅ Reinicie agora com 'sudo reboot'."
